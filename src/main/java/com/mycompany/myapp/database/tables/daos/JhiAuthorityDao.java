/*
 * This file is generated by jOOQ.
 */
package com.mycompany.myapp.database.tables.daos;

import com.mycompany.myapp.database.tables.JhiAuthority;
import com.mycompany.myapp.database.tables.records.JhiAuthorityRecord;
import java.util.List;
import java.util.Optional;
import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class JhiAuthorityDao extends DAOImpl<JhiAuthorityRecord, com.mycompany.myapp.database.tables.pojos.JhiAuthority, String> {

    /**
     * Create a new JhiAuthorityDao without any configuration
     */
    public JhiAuthorityDao() {
        super(JhiAuthority.JHI_AUTHORITY, com.mycompany.myapp.database.tables.pojos.JhiAuthority.class);
    }

    /**
     * Create a new JhiAuthorityDao with an attached configuration
     */
    public JhiAuthorityDao(Configuration configuration) {
        super(JhiAuthority.JHI_AUTHORITY, com.mycompany.myapp.database.tables.pojos.JhiAuthority.class, configuration);
    }

    @Override
    public String getId(com.mycompany.myapp.database.tables.pojos.JhiAuthority object) {
        return object.getName();
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.mycompany.myapp.database.tables.pojos.JhiAuthority> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(JhiAuthority.JHI_AUTHORITY.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.mycompany.myapp.database.tables.pojos.JhiAuthority> fetchByName(String... values) {
        return fetch(JhiAuthority.JHI_AUTHORITY.NAME, values);
    }

    /**
     * Fetch a unique record that has <code>name = value</code>
     */
    public com.mycompany.myapp.database.tables.pojos.JhiAuthority fetchOneByName(String value) {
        return fetchOne(JhiAuthority.JHI_AUTHORITY.NAME, value);
    }

    /**
     * Fetch a unique record that has <code>name = value</code>
     */
    public Optional<com.mycompany.myapp.database.tables.pojos.JhiAuthority> fetchOptionalByName(String value) {
        return fetchOptional(JhiAuthority.JHI_AUTHORITY.NAME, value);
    }
}
