/*
 * This file is generated by jOOQ.
 */
package com.mycompany.myapp.database.tables.daos;

import com.mycompany.myapp.database.tables.JhiUser;
import com.mycompany.myapp.database.tables.records.JhiUserRecord;
import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;
import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class JhiUserDao extends DAOImpl<JhiUserRecord, com.mycompany.myapp.database.tables.pojos.JhiUser, Long> {

    /**
     * Create a new JhiUserDao without any configuration
     */
    public JhiUserDao() {
        super(JhiUser.JHI_USER, com.mycompany.myapp.database.tables.pojos.JhiUser.class);
    }

    /**
     * Create a new JhiUserDao with an attached configuration
     */
    public JhiUserDao(Configuration configuration) {
        super(JhiUser.JHI_USER, com.mycompany.myapp.database.tables.pojos.JhiUser.class, configuration);
    }

    @Override
    public Long getId(com.mycompany.myapp.database.tables.pojos.JhiUser object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.mycompany.myapp.database.tables.pojos.JhiUser> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(JhiUser.JHI_USER.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.mycompany.myapp.database.tables.pojos.JhiUser> fetchById(Long... values) {
        return fetch(JhiUser.JHI_USER.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.mycompany.myapp.database.tables.pojos.JhiUser fetchOneById(Long value) {
        return fetchOne(JhiUser.JHI_USER.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.mycompany.myapp.database.tables.pojos.JhiUser> fetchOptionalById(Long value) {
        return fetchOptional(JhiUser.JHI_USER.ID, value);
    }

    /**
     * Fetch records that have <code>login BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.mycompany.myapp.database.tables.pojos.JhiUser> fetchRangeOfLogin(String lowerInclusive, String upperInclusive) {
        return fetchRange(JhiUser.JHI_USER.LOGIN, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>login IN (values)</code>
     */
    public List<com.mycompany.myapp.database.tables.pojos.JhiUser> fetchByLogin(String... values) {
        return fetch(JhiUser.JHI_USER.LOGIN, values);
    }

    /**
     * Fetch a unique record that has <code>login = value</code>
     */
    public com.mycompany.myapp.database.tables.pojos.JhiUser fetchOneByLogin(String value) {
        return fetchOne(JhiUser.JHI_USER.LOGIN, value);
    }

    /**
     * Fetch a unique record that has <code>login = value</code>
     */
    public Optional<com.mycompany.myapp.database.tables.pojos.JhiUser> fetchOptionalByLogin(String value) {
        return fetchOptional(JhiUser.JHI_USER.LOGIN, value);
    }

    /**
     * Fetch records that have <code>password_hash BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.mycompany.myapp.database.tables.pojos.JhiUser> fetchRangeOfPasswordHash(String lowerInclusive, String upperInclusive) {
        return fetchRange(JhiUser.JHI_USER.PASSWORD_HASH, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>password_hash IN (values)</code>
     */
    public List<com.mycompany.myapp.database.tables.pojos.JhiUser> fetchByPasswordHash(String... values) {
        return fetch(JhiUser.JHI_USER.PASSWORD_HASH, values);
    }

    /**
     * Fetch records that have <code>first_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.mycompany.myapp.database.tables.pojos.JhiUser> fetchRangeOfFirstName(String lowerInclusive, String upperInclusive) {
        return fetchRange(JhiUser.JHI_USER.FIRST_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>first_name IN (values)</code>
     */
    public List<com.mycompany.myapp.database.tables.pojos.JhiUser> fetchByFirstName(String... values) {
        return fetch(JhiUser.JHI_USER.FIRST_NAME, values);
    }

    /**
     * Fetch records that have <code>last_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.mycompany.myapp.database.tables.pojos.JhiUser> fetchRangeOfLastName(String lowerInclusive, String upperInclusive) {
        return fetchRange(JhiUser.JHI_USER.LAST_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>last_name IN (values)</code>
     */
    public List<com.mycompany.myapp.database.tables.pojos.JhiUser> fetchByLastName(String... values) {
        return fetch(JhiUser.JHI_USER.LAST_NAME, values);
    }

    /**
     * Fetch records that have <code>email BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.mycompany.myapp.database.tables.pojos.JhiUser> fetchRangeOfEmail(String lowerInclusive, String upperInclusive) {
        return fetchRange(JhiUser.JHI_USER.EMAIL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>email IN (values)</code>
     */
    public List<com.mycompany.myapp.database.tables.pojos.JhiUser> fetchByEmail(String... values) {
        return fetch(JhiUser.JHI_USER.EMAIL, values);
    }

    /**
     * Fetch a unique record that has <code>email = value</code>
     */
    public com.mycompany.myapp.database.tables.pojos.JhiUser fetchOneByEmail(String value) {
        return fetchOne(JhiUser.JHI_USER.EMAIL, value);
    }

    /**
     * Fetch a unique record that has <code>email = value</code>
     */
    public Optional<com.mycompany.myapp.database.tables.pojos.JhiUser> fetchOptionalByEmail(String value) {
        return fetchOptional(JhiUser.JHI_USER.EMAIL, value);
    }

    /**
     * Fetch records that have <code>image_url BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.mycompany.myapp.database.tables.pojos.JhiUser> fetchRangeOfImageUrl(String lowerInclusive, String upperInclusive) {
        return fetchRange(JhiUser.JHI_USER.IMAGE_URL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>image_url IN (values)</code>
     */
    public List<com.mycompany.myapp.database.tables.pojos.JhiUser> fetchByImageUrl(String... values) {
        return fetch(JhiUser.JHI_USER.IMAGE_URL, values);
    }

    /**
     * Fetch records that have <code>activated BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.mycompany.myapp.database.tables.pojos.JhiUser> fetchRangeOfActivated(Byte lowerInclusive, Byte upperInclusive) {
        return fetchRange(JhiUser.JHI_USER.ACTIVATED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>activated IN (values)</code>
     */
    public List<com.mycompany.myapp.database.tables.pojos.JhiUser> fetchByActivated(Byte... values) {
        return fetch(JhiUser.JHI_USER.ACTIVATED, values);
    }

    /**
     * Fetch records that have <code>lang_key BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.mycompany.myapp.database.tables.pojos.JhiUser> fetchRangeOfLangKey(String lowerInclusive, String upperInclusive) {
        return fetchRange(JhiUser.JHI_USER.LANG_KEY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>lang_key IN (values)</code>
     */
    public List<com.mycompany.myapp.database.tables.pojos.JhiUser> fetchByLangKey(String... values) {
        return fetch(JhiUser.JHI_USER.LANG_KEY, values);
    }

    /**
     * Fetch records that have <code>activation_key BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.mycompany.myapp.database.tables.pojos.JhiUser> fetchRangeOfActivationKey(String lowerInclusive, String upperInclusive) {
        return fetchRange(JhiUser.JHI_USER.ACTIVATION_KEY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>activation_key IN (values)</code>
     */
    public List<com.mycompany.myapp.database.tables.pojos.JhiUser> fetchByActivationKey(String... values) {
        return fetch(JhiUser.JHI_USER.ACTIVATION_KEY, values);
    }

    /**
     * Fetch records that have <code>reset_key BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.mycompany.myapp.database.tables.pojos.JhiUser> fetchRangeOfResetKey(String lowerInclusive, String upperInclusive) {
        return fetchRange(JhiUser.JHI_USER.RESET_KEY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>reset_key IN (values)</code>
     */
    public List<com.mycompany.myapp.database.tables.pojos.JhiUser> fetchByResetKey(String... values) {
        return fetch(JhiUser.JHI_USER.RESET_KEY, values);
    }

    /**
     * Fetch records that have <code>created_by BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.mycompany.myapp.database.tables.pojos.JhiUser> fetchRangeOfCreatedBy(String lowerInclusive, String upperInclusive) {
        return fetchRange(JhiUser.JHI_USER.CREATED_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_by IN (values)</code>
     */
    public List<com.mycompany.myapp.database.tables.pojos.JhiUser> fetchByCreatedBy(String... values) {
        return fetch(JhiUser.JHI_USER.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>created_date BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.mycompany.myapp.database.tables.pojos.JhiUser> fetchRangeOfCreatedDate(
        LocalDateTime lowerInclusive,
        LocalDateTime upperInclusive
    ) {
        return fetchRange(JhiUser.JHI_USER.CREATED_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_date IN (values)</code>
     */
    public List<com.mycompany.myapp.database.tables.pojos.JhiUser> fetchByCreatedDate(LocalDateTime... values) {
        return fetch(JhiUser.JHI_USER.CREATED_DATE, values);
    }

    /**
     * Fetch records that have <code>reset_date BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.mycompany.myapp.database.tables.pojos.JhiUser> fetchRangeOfResetDate(
        LocalDateTime lowerInclusive,
        LocalDateTime upperInclusive
    ) {
        return fetchRange(JhiUser.JHI_USER.RESET_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>reset_date IN (values)</code>
     */
    public List<com.mycompany.myapp.database.tables.pojos.JhiUser> fetchByResetDate(LocalDateTime... values) {
        return fetch(JhiUser.JHI_USER.RESET_DATE, values);
    }

    /**
     * Fetch records that have <code>last_modified_by BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.mycompany.myapp.database.tables.pojos.JhiUser> fetchRangeOfLastModifiedBy(
        String lowerInclusive,
        String upperInclusive
    ) {
        return fetchRange(JhiUser.JHI_USER.LAST_MODIFIED_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>last_modified_by IN (values)</code>
     */
    public List<com.mycompany.myapp.database.tables.pojos.JhiUser> fetchByLastModifiedBy(String... values) {
        return fetch(JhiUser.JHI_USER.LAST_MODIFIED_BY, values);
    }

    /**
     * Fetch records that have <code>last_modified_date BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<com.mycompany.myapp.database.tables.pojos.JhiUser> fetchRangeOfLastModifiedDate(
        LocalDateTime lowerInclusive,
        LocalDateTime upperInclusive
    ) {
        return fetchRange(JhiUser.JHI_USER.LAST_MODIFIED_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>last_modified_date IN (values)</code>
     */
    public List<com.mycompany.myapp.database.tables.pojos.JhiUser> fetchByLastModifiedDate(LocalDateTime... values) {
        return fetch(JhiUser.JHI_USER.LAST_MODIFIED_DATE, values);
    }
}
