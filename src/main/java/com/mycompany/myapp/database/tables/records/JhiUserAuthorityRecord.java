/*
 * This file is generated by jOOQ.
 */
package com.mycompany.myapp.database.tables.records;

import com.mycompany.myapp.database.tables.JhiUserAuthority;
import org.jooq.Record2;
import org.jooq.impl.UpdatableRecordImpl;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class JhiUserAuthorityRecord extends UpdatableRecordImpl<JhiUserAuthorityRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>jhi_user_authority.user_id</code>.
     */
    public JhiUserAuthorityRecord setUserId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>jhi_user_authority.user_id</code>.
     */
    public Long getUserId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>jhi_user_authority.authority_name</code>.
     */
    public JhiUserAuthorityRecord setAuthorityName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>jhi_user_authority.authority_name</code>.
     */
    public String getAuthorityName() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Long, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached JhiUserAuthorityRecord
     */
    public JhiUserAuthorityRecord() {
        super(JhiUserAuthority.JHI_USER_AUTHORITY);
    }

    /**
     * Create a detached, initialised JhiUserAuthorityRecord
     */
    public JhiUserAuthorityRecord(Long userId, String authorityName) {
        super(JhiUserAuthority.JHI_USER_AUTHORITY);
        setUserId(userId);
        setAuthorityName(authorityName);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised JhiUserAuthorityRecord
     */
    public JhiUserAuthorityRecord(com.mycompany.myapp.database.tables.pojos.JhiUserAuthority value) {
        super(JhiUserAuthority.JHI_USER_AUTHORITY);
        if (value != null) {
            setUserId(value.getUserId());
            setAuthorityName(value.getAuthorityName());
            resetChangedOnNotNull();
        }
    }
}
